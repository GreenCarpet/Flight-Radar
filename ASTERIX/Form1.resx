<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StartStopBTN.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjQ2N0U3RkI5Q0MyMTY4MTE4REJCRDE1QjBCNjJE
        QUE4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjlGQjk5MzAzRjlDODExRTA4MzVDQkVFMUUzMTlC
        NThEIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjlGQjk5MzAyRjlDODExRTA4MzVDQkVFMUUzMTlC
        NThEIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6OTM5QkFERTUxMDIwNjgxMTg3MUY5
        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
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>186, 17</value>
  </metadata>
  <metadata name="UpdateTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>326, 17</value>
  </metadata>
</root>